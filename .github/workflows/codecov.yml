
name: Code Coverage
on:
  push:
    paths:
    - 'src/**'

jobs:
  build:
    name: Analyze C++ Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache CodeCov
        id: codecov
        uses: actions/cache@v2
        with:
          path: codecov*
          key: ${{ runner.os }}-${{ hashFiles('codecov') }}

      # Bazel build, test, coverage
      - name: Set up Bazelisk
        run: npm install @bazel/bazelisk
      - name: Get code coverage
        run: bazelisk coverage //src:*

      # CodeCov
      - name: Fetch CodeCov and check integrity
        run: |
          curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import # One-time step
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
          shasum -a 256 -c codecov.SHA256SUM
        if: steps.codecov.cache-hit != 'true'
      - name: Run CodeCov
        run: chmod +x codecov && ./codecov
